import { createNavigation } from 'next-intl/navigation'
import { defineRouting } from 'next-intl/routing'
import { TypedLocale } from 'payload'
import autoGeneratedPathnames from './autoGenPathnames.json'
import localization from './localization'

export const authRoutes = {
  '/login': {
    pt: '/login',
    en: '/login',
  },
  '/create-account': {
    pt: '/criar-conta',
    en: '/create-account',
  },
  '/forgot-password': {
    pt: '/recuperar-password',
    en: '/forgot-password',
  },
  '/reset-password': {
    pt: '/atualizar-password',
    en: '/reset-password',
  },
}

export const protectedRoutes = {
  '/account': {
    pt: '/conta',
    en: '/account',
  },
}

export const routing = defineRouting({
  locales: localization.locales.map((locale) => locale.code),
  defaultLocale: localization.defaultLocale,
  localePrefix: 'as-needed',
  pathnames: {
    '/': '/',
    '/products': {
      pt: '/produtos',
      en: '/products',
    },
    ...protectedRoutes,
    ...authRoutes,
    ...autoGeneratedPathnames,
  },
})

// Lightweight wrappers around Next.js' navigation APIs
// that will consider the routing configuration
export const { Link, redirect, usePathname, useRouter } = createNavigation(routing)
export type Pathnames = keyof typeof routing.pathnames
export type PathNamesObject = {
  [key: string]: {
    [locale in TypedLocale]?: string
  }
}
export type Locale = (typeof routing.locales)[number]
