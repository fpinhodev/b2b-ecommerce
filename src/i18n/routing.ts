import { createNavigation } from 'next-intl/navigation'
import { defineRouting } from 'next-intl/routing'
import { TypedLocale } from 'payload'
import autoGeneratedPathnames from './autoGenPathnames.json'
import localization from './localization'

export const authRoutes = {
  '/login': {
    pt: '/login',
    en: '/login',
  },
  '/create-account': {
    pt: '/criar-conta',
    en: '/create-account',
  },
  '/recover-password': {
    pt: '/recuperar-password',
    en: '/recover-password',
  },
  '/reset-password': {
    pt: '/atualizar-password',
    en: '/reset-password',
  },
}

export const protectedRoutes = {
  '/account': {
    pt: '/conta',
    en: '/account',
  },
  '/account/personal-data': {
    pt: '/conta/dados-pessoais',
    en: '/account/personal-data',
  },
  '/account/addresses': {
    pt: '/conta/moradas',
    en: '/account/addresses',
  },
  '/account/access-data': {
    pt: '/conta/dados-acesso',
    en: '/account/access-data',
  },
  '/account/addresses/create': {
    pt: '/conta/moradas/adicionar',
    en: '/account/addresses/create',
  },
  '/account/orders': {
    pt: '/conta/encomendas',
    en: '/account/orders',
  },
  '/cart': {
    pt: '/carrinho',
    en: '/cart',
  },
  '/shipping': {
    pt: '/envio',
    en: '/shipping',
  },
  '/payment': {
    pt: '/pagamento',
    en: '/payment',
  },
}

export const routing = defineRouting({
  locales: localization.locales.map((locale) => locale.code),
  defaultLocale: localization.defaultLocale,
  localePrefix: 'as-needed',
  pathnames: {
    '/': '/',
    '/products': {
      pt: '/produtos',
      en: '/products',
    },
    '/products/[slug]': {
      pt: '/produtos/[slug]',
      en: '/products/[slug]',
    },
    ...protectedRoutes,
    ...authRoutes,
    ...autoGeneratedPathnames,
  },
})

// Lightweight wrappers around Next.js' navigation APIs
// that will consider the routing configuration
export const { Link, redirect, usePathname, useRouter } = createNavigation(routing)
export type Pathnames = keyof typeof routing.pathnames
export type PathNamesObject = {
  [key: string]: {
    [locale in TypedLocale]?: string
  }
}
export type Locale = (typeof routing.locales)[number]
